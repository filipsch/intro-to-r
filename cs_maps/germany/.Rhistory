axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(1,2))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(1:10,13,16), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,13,16), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
stripchart(c(1:10,13,16,19,22), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,13,16,19,22), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(1:10,13,16,19,22,25,28,31), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,13,16,19,22,25,28,31), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(-14,-11,-8,-5,-2,1:10,13,16,19,22,25,28,31), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(-14,-11,-8,-5,-2,1:10,13,16,19,22,25,28,31), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,20), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,20), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
IQR(c(1:10,20))
1.5 * IQR(c(1:10,20))
quintile(c(1:10,20))
quantile(c(1:10,20))
quantile(c(1:10,20))[4]
quantile(c(1:10,20))[4] + 1.5 * IQR(c(1:10,20))
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(-14,-11,-8,-5,-2,1:10,13,16,19,22,25,28,31), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(-14,-11,-8,-5,-2,1:10,13,16,19,22,25,28,31), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
#quantile(c(1:10,20))[4] + 1.5 * IQR(c(1:10,20))
stripchart(c(1:10,16.5), pch = 16, col = "#C4212622", axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
par(opar)
quantile(1:10)[4] + 1.5 * IQR(1:10)
quantile(1:10)[4]
quantile(1:10)
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, xlim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE, ylim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,10))
axis(1, c(0:10), c(0:10), las = 1)
stripchart(1:10, pch = 16, col = "#C4212622", axes = FALSE, xlim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,20))
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C4212622", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(1:10, pch = 16, col = "#C42126", axes = FALSE, xlim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
stripchart(c(1:10,16), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:10), c(0:10), las = 1)
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:10), c(0:10), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE)
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), seq(0,20,2), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
par(opar)
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot1.pdf")
stripchart(1:10, pch = 16, col = "#C42126", axes = FALSE, xlim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
dev.off()
stripchart(1:10, pch = 16, col = "#C42126", axes = FALSE, xlim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot1.pdf")
opar <- par(mfrow = c(2,1))
stripchart(1:10, pch = 16, col = "#C42126", axes = FALSE, xlim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
boxplot(1:10, col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(1,10))
axis(1, c(1:10), c(1:10), las = 1)
dev.off()
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot2.pdf")
stripchart(c(1:10,16), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
#quantile(c(1:10,20))[4] + 1.5 * IQR(c(1:10,20))
dev.off()
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot2.pdf")
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,16), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
#quantile(c(1:10,20))[4] + 1.5 * IQR(c(1:10,20))
par(opar)
dev.off()
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot3.pdf")
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
par(opar)
dev.off()
quantile(1:10)
IQR(1:10)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(-5:20), c(-5:20), las = 1)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,20))
axis(1, c(-5:20), c(-5:20), las = 1)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
boxplot(c(-5,1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,17))
axis(1, c(-5:17), c(-5:17), las = 1)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
boxplot(c(-5,1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
quantile(c(1:10,16))
IQR(c(1:10,16))
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot2b.pdf",width = 9)
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,16), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
#IQR(c(1:10,16))
#quantile(c(1:10,20))[4] + 1.5 * IQR(c(1:10,20))
par(opar)
dev.off()
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot3b.pdf", width = 9)
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
boxplot(c(-5,1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(-5,17))
axis(1, c(-5:17), c(-5:17), las = 1)
par(opar)
dev.off()
quantiles(c(-5,1:10,16.5))
quantile(c(-5,1:10,16.5))
pdf("/Users/Milou/Desktop/Workshop_Examples/boxplots/plot3b.pdf", width = 9)
opar <- par(mfrow = c(2,1))
stripchart(c(1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
boxplot(c(1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(0,20))
axis(1, c(0:20), c(0:20), las = 1)
#stripchart(c(-5,1:10,16.5), pch = 16, col = "#C42126", axes = FALSE, xlim = c(-5,17))
#axis(1, c(-5:17), c(-5:17), las = 1)
#boxplot(c(-5,1:10,16.5), col = "#C42126", horizontal = TRUE, axes = FALSE, ylim = c(-5,17))
#axis(1, c(-5:17), c(-5:17), las = 1)
#quantile(c(-5,1:10,16.5))
par(opar)
dev.off()
quantile(c(1:10,16.5))
data(mtcars)
View(mtcars)
View(mtcars)
p <- runif(100)
p
qqnorm(p)
qqline(p)
r <- rnorm(100)
qqnorm(r)
qqline(r)
qqnorm(log(r))
qqline(log(r))
library("ggplot2")
library("manipulate")
chromium <- read.csv("/Users/Milou/Documents/Science Craft/Workshops/Data Visualization/Teaching Material/Reference Book/R-Code/Interactivity/chromium.csv")
nickel <- read.csv("/Users/Milou/Documents/Science Craft/Workshops/Data Visualization/Teaching Material/Reference Book/R-Code/Interactivity/nickel.csv")
manipulate({
p<- ggplot(data, aes(air, bm)) + geom_point()+scale_x_continuous(trans=xScale)+scale_y_continuous(trans=yScale)
if(facet!="None") p<-p+facet_grid(facet)
p
},
yScale=picker("Linear"="identity","Log"="log10",label="Y Scale Transformation"),
xScale=picker("Linear"="identity","Log"="log10",label="X Scale Transformation"),
facet=picker( "None" = "None", "RPE" = ". ~ rpe","Welding type" = ". ~ welding.type","RPE and Welding type" = "rpe ~ welding.type",initial="None",label="Faceting"),
data=picker("Chromium"=chromium,"Nickel"=nickel,label="Datasets")
)
hun_2011comprehensiveLapTimes <- read.csv("/Users/Milou/Documents/Science Craft/Workshops/Data Visualization/Teaching Material/Reference Book/R-Code/Interactivity/Another Rstudio Example/hun_2011comprehensiveLapTimes.csv")
library("manipulate")
h <- hun_2011comprehensiveLapTimes
manipulate(
plot(lapTime~lap,data=subset(h,car==cn1),type='l',col=car) +
lines(lapTime~lap,data=subset(h,car==cn2 ),col=car),
cn1=slider(1,25),cn2=slider(1,25)
)
library(googleVis)
df=data.frame(country=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
View(df)
View(df)
Line <- gvisLineChart(df,
options=list(legend='none', width=300, height=200))
plot(Line)
Bar <- gvisBarChart(df,
options=list(legend='none', width=300, height=200))
plot(Bar)
Area <- gvisAreaChart(df,
options=list(legend='none', width=300, height=300))
plot(Area)
Scatter <- gvisScatterChart(women, options=list(legend="none",
lineWidth=0, pointSize=1, hAxis.title="weight",
title="Women", vAxis="{title:'height'}",
hAxis="{title:'weight'}", width=300, height=300))
plot(Scatter)
data(Fruits)
View(Fruits)
View(Fruits)
Motion <- gvisMotionChart(Fruits,
idvar="Fruit",
timevar="Year",
options=list(height=350, width=400))
plot(Motion)
# GoogleVis Motion chart showing tourism receipts and international tourist  arrivals of various countries since 1995.
# http://pairach.com/2012/12/21/visualising-tourism-data-using-r-with-googlevis-package/
getWorldBankData <- function(id='SP.POP.TOTL', date='1960:2010',
value="value", per.page=12000){
require(RJSONIO)
url <- paste("http://api.worldbank.org/countries/all/indicators/", id,
"?date=", date, "&format=json&per_page=", per.page,
sep="")
wbData <- fromJSON(url)[[2]]
wbData = data.frame(
year = as.numeric(sapply(wbData, "[[", "date")),
value = as.numeric(sapply(wbData, function(x)
ifelse(is.null(x[["value"]]),NA, x[["value"]]))),
country.name = sapply(wbData, function(x) x[["country"]]['value']),
country.id = sapply(wbData, function(x) x[["country"]]['id'])
)
names(wbData)[2] <- value
return(wbData)
}
getWorldBankCountries <- function(){
require(RJSONIO)
wbCountries <-
fromJSON("http://api.worldbank.org/countries?per_page=12000&format=json")
wbCountries <- data.frame(t(sapply(wbCountries[[2]], unlist)))
wbCountries$longitude <- as.numeric(wbCountries$longitude)
wbCountries$latitude <- as.numeric(wbCountries$latitude)
levels(wbCountries$region.value) <- gsub(" \\(all income levels\\)",
"", levels(wbCountries$region.value))
return(wbCountries)
}
## Create a string 1960:this year, e.g. 1960:2011
years <- paste("1960:", format(Sys.Date(), "%Y"), sep="")
## International Tourism Arrivals
inter.tourist.arrivals<- getWorldBankData(id='ST.INT.ARVL',
date=years, value="International tourism, number of arrivals")
## International Tourism Receipts
tourism.receipts <- getWorldBankData(id='ST.INT.RCPT.CD', date=years,
value="International tourism, receipts (current US$)")
## Population
population <- getWorldBankData(id='SP.POP.TOTL', date=years,
value="population")
## GDP per capita (current US$)
GDP.per.capita <- getWorldBankData(id='NY.GDP.PCAP.CD',
date=years,
value="GDP.per.capita.Current.USD")
## Merge data sets
wbData <- merge(tourism.receipts, inter.tourist.arrivals)
wbData <- merge(wbData, population)
wbData <- merge(wbData, GDP.per.capita)
## Get country mappings
wbCountries <- getWorldBankCountries()
## Add regional information
wbData <- merge(wbData, wbCountries[c("iso2Code", "region.value",
"incomeLevel.value")],
by.x="country.id", by.y="iso2Code")
## Filter out the aggregates and country id column
subData <- subset(wbData, !region.value %in% "Aggregates" , select=
-country.id)
## Create a motion chart
M <- gvisMotionChart(subData, idvar="country.name", timevar="year",
options=list(width=700, height=600))
## Display the chart in your browser
plot(M)
# save as a file
print(M, file="myGoogleVisChart.html")
summary(hdata)
rm()
rm (list = ls())
library(sna)
install.packages("sna", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(sna)
library(Matrix)   # for build a block diagonal matrix
library(reldist)  # for gini coefficient (also: https://stat.ethz.ch/pipermail/r-help/2007-June/133875.html)
install.packages("reldist", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(reldist)  # for gini coefficient (also: https://stat.ethz.ch/pipermail/r-help/2007-June/133875.html)
library(plyr)     # for everithing? :P
library(rjson)    # for exporting data
install.packages("rjson", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(rjson)    # for exporting data
degree_sna <- function(net, norm = TRUE, ...){
degree(net, ...)/2/(if(norm) ncol(net)-1 else 1)
}
betweenness_sna <- function(net, norm = FALSE, ...){
n <- ncol(net)
betweenness(net, ...)/2/(if(norm) (n-1)*(n-2)/2 else 1)
}
net.butterfly <- matrix(c(0,1,1,0,0,0,0,
1,0,1,0,0,0,0,
1,1,0,1,0,0,0,
0,0,1,0,1,0,0,
0,0,0,1,0,1,1,
0,0,0,0,1,0,1,
0,0,0,0,1,1,0),
byrow = TRUE, nrow = 7)
net.star <- matrix(c(0,1,1,1,1,1,
1,0,0,0,0,0,
1,0,0,0,0,0,
1,0,0,0,0,0,
1,0,0,0,0,0,
1,0,0,0,0,0),
byrow = TRUE, nrow = 6)
net.line <- matrix(c(0,1,0,0,0,
1,0,1,0,0,
0,1,0,1,0,
0,0,1,0,1,
0,0,0,1,0),
byrow = TRUE, nrow = 5)
net.circular <- matrix(c(0,1,0,0,1,
1,0,1,0,0,
0,1,0,1,0,
0,0,1,0,1,
1,0,0,1,0),
byrow = TRUE, nrow = 5)
nets <- list(net.butterfly, net.star, net.line, net.circular)
net.all <- as.matrix(bdiag(net.butterfly, net.star, net.line, net.circular))
gplot(net.butterfly, displaylabels=TRUE, usearrows=FALSE)
gplot(net.star, displaylabels=TRUE, usearrows=FALSE)
gplot(net.line, displaylabels=TRUE, usearrows=FALSE)
gplot(net.circular, displaylabels=TRUE, usearrows=FALSE)
gplot(net.all,
usearrows=FALSE,
label = unlist(llply(nets, degree_sna, norm = FALSE)))
llply(nets, degree_sna)
llply(nets, degree_sna, norm = FALSE)
laply(nets, function(net){ gini(degree_sna(net)) })
laply(nets, function(net){   sd(degree_sna(net)) })
laply(nets, centralization, degree)
llply(nets, betweenness_sna)
llply(nets, betweenness_sna, norm = TRUE)
llply(nets, closeness)
llply(nets, evcent)
net.all
names <- paste(rep(1:length(nets), laply(nets, ncol)),
unlist(llply(nets, function(x) 1:ncol(x))), sep = "_")
colnames(net.all) <- names
rownames(net.all) <- names
links <- ldply(names, function(name){
data.frame(source = which(names==name)-1,
target = which(net.all[name,] == 1)-1)
})
nodes <- data.frame(name = names)
nodes$degree_norm <- unlist(llply(nets, degree_sna))
nodes$degree <- unlist(llply(nets, degree_sna, norm = FALSE))
nodes$betweenness <- unlist(llply(nets, betweenness_sna))
nodes$betweenness_norm <- unlist(llply(nets, betweenness_sna, norm = TRUE))
nodes$closeness <- unlist(llply(nets, closeness))
nodes$eigen_vector_centrality <- unlist(llply(nets, evcent))
nodes_json <- adply(nodes, 1, toJSON )$V1
nodes_json <- paste(" \"nodes\" : [", paste("\n", nodes_json, collapse=", "), "\n]")
links_json <- adply(links, 1, toJSON)$V1
links_json <- paste(" \"links\" : [", paste("\n", links_json, collapse=", "), "\n]")
data_json <- paste("{\n", nodes_json, "\n,\n", links_json, "}")
write(data_json, "data.json")
getwd()
install.packages("devtools")
library(devtools)
install_github("clickme", "nachocab")
install.packages("devtools", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(devtools)
install.packages("yaml", lib="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(clickma)
library(clickme)
install_github("clickme", "nachocab")
new_ractive("my_ractive")
list_ractives()
demo_ractive("force_directed")
library(knitr)
demo_ractive("force_directed")
install.packages("devtools")
library(devtools)
install_github("clickme", "nachocab")
library(knitr)
library(clickme)
new_ractive("my_ractive")
list_ractives()
demo_ractive("force_directed")
library(df2json)
library(clickme)
demo_ractive("line_with_focus")
demo_ractive("longitudinal_heatmap")
demo_ractive("longitudinal_heatmap")
demo_ractive("par_coords")
demo_ractive("vega")
rm(list = ls())
library(ggplot2)
rm(list = ls())
library(maptools)
library(sp)
setwd("/Users/Milou/Documents/Science Craft/Workshops/Data Visualization/R Examples/Biobucket/GermanyExample/DEU_adm")
ger.shp0 <- readShapePoly("DEU_adm0.shp")
plot(ger.shp0)
ger.shp0.p4S <- readShapePoly("DEU_adm0.shp", verbose=TRUE, proj4string=P4S.latlon)
library(rgdal)
ger.shp0.p4S <- readShapePoly("DEU_adm0.shp", verbose=TRUE, proj4string=P4S.latlon)
P4S.latlon <- CRS("+proj=longlat +datum=WGS84")
ger.shp0.p4S <- readShapePoly("DEU_adm0.shp", verbose=TRUE, proj4string=P4S.latlon)
plot(ger.shp0.p4S)
ger.shp0.p4S.2 <- spTransform(ger.shp0.p4S, CRS("+init=epsg:26978"))
ger.shp0.p4S.2 <- spTransform(ger.shp0, CRS("+init=epsg:26978"))
